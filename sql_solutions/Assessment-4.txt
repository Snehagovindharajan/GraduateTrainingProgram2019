create table project1 (proj_id integer,proj_name varchar(30));

insert into project1 values(1,'Neon Data & Analytics');
insert into project1 values(2,'ASG Data Warehousing');
insert into project1 values(3,'Pepsi Data Mart');
insert into project1 values(4,'Microsoft');
insert into project1 values(5,'Amazon Cloud Logistics');
insert into project1 values(10,'Flipkart');


create table customer1 (customer_id integer,cust_name varchar(15),city varchar(15),priority_num integer,salesman_id integer,purchased_Amount integer);

insert into customer1 values(10,'James','Chennai',1,1,10000);
insert into customer1 values(20,'Ricky','Chennai',1,3,8000);
insert into customer1 values(30,'Ramu','Bangalore',1,2,8000);
insert into customer1 values(40,'Jyothi','Hyderabad',2,3,9000);
insert into customer1 values(50,'Amaran','Chennai',1,4,3000);
insert into customer1 values(60,'Akilan','Hyderabad',2,3,6000);
insert into customer1 values(70,'Arun','Chennai',2,5,5000);
insert into customer1 values(80,'Dinesh','Mumbai',2,4,6000);

create table salesman1(salesman_id integer,salesman_name varchar(15),city varchar(15),sales_manager_id integer,monthly_target integer);

insert into salesman1 values(1,'John','Chennai',2,10000);
insert into salesman1 values(2,'Abraham','Bangalore',4,21000);
insert into salesman1 values(3,'Raju','Hyderabad',4,21000);
insert into salesman1 values(4,'Srinath','Mumbai',5,9000);
insert into salesman1 values(5,'Vijay','Chennai',6,4000);
insert into salesman1 values(6,'Balaji','Hyderabad',6,15000);


1)Fetch EMP_ID,EMP_NAME,DESC_NAME,PLACE_DESC,EMP_DESC_CNT,EMP_PLACE_CNT
EMP_DESC_CNT --- > No Of Employess Each Designation
EMP_PLACE_CNT ---> No Of Employess Each Place
List All the Employees in The employess
If there is null in Place or Designation show as 'OTHERS'"								
								
mysql> select empid,empname,desc_name1,place_desc1,proj_name1,count(empid) over(partition by desc_name1) as desc_count,count(empid) over(partition by place_desc1) as count_place from ( select e.emp_id empid,e.emp_name empname,coalesce(d.desc_name,"others") as desc_name1,coalesce(p.place_desc,"Others") as place_desc1,coalesce(p1.proj_name,"others") as proj_name1  from employee e left join designation d on e.desc_id=d.desc_id left join place p on e.place_id=p.place_id left join project1 p1 on e.proj_id=p1.proj_id order by e.emp_id ) table1;

+-------+---------------+------------+-------------+------------------------+------------+-------------+
| empid | empname       | desc_name1 | place_desc1 | proj_name1             | desc_count | count_place |
+-------+---------------+------------+-------------+------------------------+------------+-------------+
|     1 | Vijaykumar    | ASE        | Chennai     | Pepsi Data Mart        |          3 |           2 |
|     2 | Raja          | SE         | Hyderabad   | Microsoft              |          3 |           3 |
|     3 | Abhisheksingh | ASE        | Mexico      | Amazon Cloud Logistics |          3 |           1 |
|     4 | Santosh       | SSE        | Bangalore   | Neon Data & Analytics  |          2 |           2 |
|     5 | Kribakaran    | SE         | Hyderabad   | ASG Data Warehousing   |          3 |           3 |
|     6 | Divya         | TL         | Newyork     | Pepsi Data Mart        |          1 |           2 |
|     7 | Suganya       | ASE        | Hyderabad   | Microsoft              |          3 |           3 |
|     8 | Shalini       | SE         | Bangalore   | ASG Data Warehousing   |          3 |           2 |
|     9 | Avantika      | SSE        | Chennai     | Amazon Cloud Logistics |          2 |           2 |
|    10 | Ajay          | AM         | Others      | others                 |          1 |           5 |
|    11 | Tamilselvan   | others     | Others      | others                 |          5 |           5 |
|    12 | Vinodha       | others     | Others      | others                 |          5 |           5 |
|    13 | Karthick      | others     | Newyork     | ASG Data Warehousing   |          5 |           2 |
|    14 | Sanjay        | others     | Others      | Amazon Cloud Logistics |          5 |           5 |
|    15 | Meera         | others     | Others      | others                 |          5 |           5 |
+-------+---------------+------------+-------------+------------------------+------------+-------------+
15 rows in set (0.00 sec)

2)Fetch EMP_ID,EMP_NAME,DESC_NAME,PLACE_DESC,PROJ_NAME
List All the Employees who is working in 'Data' or 'Cloud' project. 
Note: Find Respective  keyword in project name							
								
mysql> select e.emp_id empid,e.emp_name empname,coalesce(d.desc_name,"others") as desc_name1,coalesce(p.place_desc,"Others") as place_desc1,coalesce(p1.proj_name,"others") as proj_name1  from employee e left join designation d on e.desc_id=d.desc_id left join place p on e.place_id=p.place_id left join project1 p1 on e.proj_id=p1.proj_id  where p1.proj_name like '%data%' or p1.proj_name like '%cloud%' order by e.emp_id;
+-------+---------------+------------+-------------+------------------------+
| empid | empname       | desc_name1 | place_desc1 | proj_name1             |
+-------+---------------+------------+-------------+------------------------+
|     1 | Vijaykumar    | ASE        | Chennai     | Pepsi Data Mart        |
|     3 | Abhisheksingh | ASE        | Mexico      | Amazon Cloud Logistics |
|     4 | Santosh       | SSE        | Bangalore   | Neon Data & Analytics  |
|     5 | Kribakaran    | SE         | Hyderabad   | ASG Data Warehousing   |
|     6 | Divya         | TL         | Newyork     | Pepsi Data Mart        |
|     8 | Shalini       | SE         | Bangalore   | ASG Data Warehousing   |
|     9 | Avantika      | SSE        | Chennai     | Amazon Cloud Logistics |
|    13 | Karthick      | others     | Newyork     | ASG Data Warehousing   |
|    14 | Sanjay        | others     | Others      | Amazon Cloud Logistics |
+-------+---------------+------------+-------------+------------------------+
9 rows in set (0.00 sec)

3)Fetch EMP_NAME,PLACE_DESC
Show only employees working as higest grade in each place, If two employees in same grade use minimum Project_id to pick one,  If two employees in same project use minimum Project_id to pick one,
Use DESC_ID, PLACE_ID & PROJECT_ID to define Grades								

mysql> select empid,empname,desc_name,place_desc,proj_name from (select e.emp_id empid,e.emp_name empname,d.desc_name desc_name,p.place_desc place_desc,p1.proj_name proj_name,dense_rank() over(partition by p.place_desc order by d.desc_id desc,p1.proj_id) as rank_desc from employee e join designation d on e.desc_id=d.desc_id join place p on e.place_id=p.place_id join project1 p1 on e.proj_id=p1.proj_id ) table1 where rank_desc = 1;
+-------+---------------+-----------+------------+------------------------+
| empid | empname       | desc_name | place_desc | proj_name              |
+-------+---------------+-----------+------------+------------------------+
|     4 | Santosh       | SSE       | Bangalore  | Neon Data & Analytics  |
|     9 | Avantika      | SSE       | Chennai    | Amazon Cloud Logistics |
|     5 | Kribakaran    | SE        | Hyderabad  | ASG Data Warehousing   |
|     3 | Abhisheksingh | ASE       | Mexico     | Amazon Cloud Logistics |
|     6 | Divya         | TL        | Newyork    | Pepsi Data Mart        |
+-------+---------------+-----------+------------+------------------------+
5 rows in set (0.00 sec)

4)Fetch Salesman manger Name  & Customer Name 
Show Only the Priority Customer based on the Purchased Amount		
				
mysql> select manager,cust_name from(select s.salesman_id,s.salesman_name as manager,s1.salesman_name as salesman_name,c.cust_name,dense_rank() over(partition by s.salesman_id order by c.purchased_amount desc) as rank_d from salesman s join salesman s1 on s.salesman_id=s1.sales_manager_id join customer c on s1.salesman_id = c.salesman_id) as table1 where rank_d=1;
+---------+-----------+
| manager | cust_name |
+---------+-----------+
| Abraham | James     |
| Srinath | Jyothi    |
| Vijay   | Dinesh    |
| Balaji  | Arun      |
+---------+-----------+
4 rows in set (0.07 sec)

5)Update the Purchased Monthly target for each sales person based on the Purchase amount 				

update salesman1 s join (select c.salesman_id sales_id ,sum(c.purchased_amount) over(partition by c.salesman_id) as sum_target from customer1 c ) as table2 on table2.sales_id = s.salesman_id set s.monthly_target=table2.sum_target;

update salesman1 s join (select c.salesman_id sales_id ,sum(c.purchased_amount) as sum_target from customer1 c group by salesman_id ) as table2 on table2.sales_id = s.salesman_id set s.monthly_target=table2.sum_target;

mysql> select * from salesman1;
+-------------+---------------+-----------+------------------+----------------+
| salesman_id | salesman_name | city      | sales_manager_id | monthly_target |
+-------------+---------------+-----------+------------------+----------------+
|           1 | John          | Chennai   |                2 |          10000 |
|           2 | Abraham       | Bangalore |                4 |           8000 |
|           3 | Raju          | Hyderabad |                4 |          23000 |
|           4 | Srinath       | Mumbai    |                5 |           9000 |
|           5 | Vijay         | Chennai   |                6 |           5000 |
|           6 | Balaji        | Hyderabad |                6 |          15000 |
+-------------+---------------+-----------+------------------+----------------+
6 rows in set (0.00 sec)

mysql> update salesman1 s join (select s1.salesman_id sales_id ,coalesce(sum(c.purchased_amount) over(partition by s1.salesman_id),0) as sum_target from salesman1 s1 left join customer1 c on s1.salesman_id=c.salesman_id) as table2 on table2.sales_id = s.salesman_id set s.monthly_target=table2.sum_target;

Query OK, 1 row affected (0.14 sec)
Rows matched: 6  Changed: 1  Warnings: 0

mysql> select * from salesman1;
+-------------+---------------+-----------+------------------+----------------+
| salesman_id | salesman_name | city      | sales_manager_id | monthly_target |
+-------------+---------------+-----------+------------------+----------------+
|           1 | John          | Chennai   |                2 |          10000 |
|           2 | Abraham       | Bangalore |                4 |           8000 |
|           3 | Raju          | Hyderabad |                4 |          23000 |
|           4 | Srinath       | Mumbai    |                5 |           9000 |
|           5 | Vijay         | Chennai   |                6 |           5000 |
|           6 | Balaji        | Hyderabad |                6 |              0 |
+-------------+---------------+-----------+------------------+----------------+
6 rows in set (0.00 sec)
